// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformaEducacao.GestaoAlunos.Data.Context;

#nullable disable

namespace PlataformaEducacao.GestaoAlunos.Data.Migrations
{
    [DbContext(typeof(GestaoAlunosContext))]
    [Migration("20250630211515_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Certificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Arquivo")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeAluno")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("MatriculaId");

                    b.ToTable("Certificados", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataMatricula")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("StatusId");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.StatusMatricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Codigo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StatusMatriculas", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Aluno", b =>
                {
                    b.HasBaseType("PlataformaEducacao.GestaoAlunos.Domain.Usuario");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Certificado", b =>
                {
                    b.HasOne("PlataformaEducacao.GestaoAlunos.Domain.Aluno", "Aluno")
                        .WithMany("Certificados")
                        .HasForeignKey("AlunoId")
                        .IsRequired();

                    b.HasOne("PlataformaEducacao.GestaoAlunos.Domain.Matricula", "Matricula")
                        .WithMany()
                        .HasForeignKey("MatriculaId")
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Matricula", b =>
                {
                    b.HasOne("PlataformaEducacao.GestaoAlunos.Domain.Aluno", "Aluno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .IsRequired();

                    b.HasOne("PlataformaEducacao.GestaoAlunos.Domain.StatusMatricula", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Aluno", b =>
                {
                    b.HasOne("PlataformaEducacao.GestaoAlunos.Domain.Usuario", null)
                        .WithOne()
                        .HasForeignKey("PlataformaEducacao.GestaoAlunos.Domain.Aluno", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Aluno", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
